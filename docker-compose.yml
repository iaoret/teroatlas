version: '3.8'


# Define shared restart policy
x-restart: &restart-policy
  restart: always

services:
  db:
    build: 
      context: .
      dockerfile: Dockerfile.database
    platform: linux/amd64
    ports:
      - "6432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./db_image:/mnt
      - ./initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    <<: *restart-policy
    command: bash -c "chown -R postgres:postgres /docker-entrypoint-initdb.d/initdb.sh && chmod +x /docker-entrypoint-initdb.d/initdb.sh && chown -R postgres:postgres /mnt && chmod -R 777 /mnt && docker-entrypoint.sh postgres"
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres", "-d", "teroatlas", "-c", "SELECT 1 FROM q4_nyc_boro_block_economic_data LIMIT 1"]
      interval: 120s
      timeout: 30s
      retries: 100

  tiles:
    image: pramsey/pg_tileserv
    ports:
      - "6433:7800"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db/teroatlas
    depends_on:
      db:
        condition: service_healthy
    <<: *restart-policy

  rest:
    image: postgrest/postgrest
    environment:
      PGRST_DB_URI: postgresql://postgres:postgres@db/teroatlas
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres
    ports:
      - "6434:3000"
    depends_on:
      db:
        condition: service_healthy
    <<: *restart-policy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"