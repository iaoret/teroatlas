version: '3.8'

# Define shared environment variables for the database
x-db-env: &db-env
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres

# Define shared restart policy
x-restart: &restart-policy
  restart: always

services:
  db:
    image: postgis/postgis:latest
    ports:
      - "6432:5432"
    networks:
      - tero-atlas
    environment:
      <<: *db-env
    volumes:
      - ./data:/var/lib/postgresql/data
    <<: *restart-policy
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  tiles:
    image: pramsey/pg_tileserv
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db/postgres
    networks:
      - tero-atlas
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tiles.rule=Host(`tero-atlas-tiles.marotta.dev`)"
      - "traefik.http.routers.tiles.entrypoints=web"
      - "traefik.http.services.tiles.loadbalancer.server.port=7800"
    <<: *restart-policy

  rest:
    image: postgrest/postgrest
    environment:
      PGRST_DB_URI: postgresql://postgres:postgres@db/postgres
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres
    networks:
      - tero-atlas
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rest.rule=Host(`tero-atlas-rest.marotta.dev`)"
      - "traefik.http.routers.rest.entrypoints=web"
      - "traefik.http.services.rest.loadbalancer.server.port=3000"
    <<: *restart-policy

  traefik:
    image: traefik:v3.0
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    networks:
      - tero-atlas
    <<: *restart-policy

networks:
  tero-atlas:
    driver: bridge